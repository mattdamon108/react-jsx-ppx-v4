// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";

var context = React.createContext(/* Dark */1);

var make = context.Provider;

var Provider = {
  make: make
};

var ThemeContext = {
  context: context,
  Provider: Provider
};

function ContextProvider$Button(props) {
  var className = props.theme ? "theme-black" : "theme-light";
  return React.createElement("button", {
              className: className
            }, "Click me");
}

var Button = {
  make: ContextProvider$Button
};

function ContextProvider$ThemedButton(props) {
  var theme = React.useContext(context);
  return React.createElement(ContextProvider$Button, {
              theme: theme
            });
}

var ThemedButton = {
  make: ContextProvider$ThemedButton
};

function ContextProvider$Toolbar(props) {
  return React.createElement("div", undefined, React.createElement(ContextProvider$ThemedButton, {}));
}

var Toolbar = {
  make: ContextProvider$Toolbar
};

function ContextProvider(props) {
  return React.createElement(make, {
              value: /* Light */0,
              children: React.createElement("div", undefined, React.createElement(ContextProvider$Toolbar, {}))
            });
}

var make$1 = ContextProvider;

export {
  ThemeContext ,
  Button ,
  ThemedButton ,
  Toolbar ,
  make$1 as make,
}
/* context Not a pure module */
